package at.intelligentminds.service.model;

// Generated 29-Apr-2015 15:07:52 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "mindmessages")
public class User implements java.io.Serializable {

  private static final long serialVersionUID = 6940947260228300929L;
  private int id;
  private String name;
  private String lastName;
  private String password;
  private String email;
  private String profileText;
  private Set<User> usersForContactId = new HashSet<User>(0);
  private Set<Message> messagesForUserReceiverId = new HashSet<Message>(0);
  private Set<User> usersForUserId = new HashSet<User>(0);
  private Set<Message> messagesForUserSenderId = new HashSet<Message>(0);
  private Set<Group> groups = new HashSet<Group>(0);

  public User() {
  }

  public User(int id) {
    this.id = id;
  }

  public User(int id, String name, String lastName, String password, String email, String profileText,
      Set<User> usersForContactId, Set<Message> messagesForUserReceiverId, Set<User> usersForUserId,
      Set<Message> messagesForUserSenderId, Set<Group> groups) {
    this.id = id;
    this.name = name;
    this.lastName = lastName;
    this.password = password;
    this.email = email;
    this.profileText = profileText;
    this.usersForContactId = usersForContactId;
    this.messagesForUserReceiverId = messagesForUserReceiverId;
    this.usersForUserId = usersForUserId;
    this.messagesForUserSenderId = messagesForUserSenderId;
    this.groups = groups;
  }

  @Id
  @Column(name = "id", unique = true, nullable = false)
  public int getId() {
    return this.id;
  }

  public void setId(int id) {
    this.id = id;
  }

  @Column(name = "name", length = 45)
  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  @Column(name = "last_name", length = 45)
  public String getLastName() {
    return this.lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  @Column(name = "password", length = 56)
  public String getPassword() {
    return this.password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  @Column(name = "email", length = 45)
  public String getEmail() {
    return this.email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  @Column(name = "profile_text", length = 256)
  public String getProfileText() {
    return this.profileText;
  }

  public void setProfileText(String profileText) {
    this.profileText = profileText;
  }

  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "user_contact", catalog = "mindmessages", joinColumns = { @JoinColumn(name = "user_id",
      nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "contact_id", nullable = false,
      updatable = false) })
  public Set<User> getUsersForContactId() {
    return this.usersForContactId;
  }

  public void setUsersForContactId(Set<User> usersForContactId) {
    this.usersForContactId = usersForContactId;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserReceiverId")
  public Set<Message> getMessagesForUserReceiverId() {
    return this.messagesForUserReceiverId;
  }

  public void setMessagesForUserReceiverId(Set<Message> messagesForUserReceiverId) {
    this.messagesForUserReceiverId = messagesForUserReceiverId;
  }

  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "user_contact", catalog = "mindmessages", joinColumns = { @JoinColumn(name = "contact_id",
      nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "user_id", nullable = false,
      updatable = false) })
  public Set<User> getUsersForUserId() {
    return this.usersForUserId;
  }

  public void setUsersForUserId(Set<User> usersForUserId) {
    this.usersForUserId = usersForUserId;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserSenderId")
  public Set<Message> getMessagesForUserSenderId() {
    return this.messagesForUserSenderId;
  }

  public void setMessagesForUserSenderId(Set<Message> messagesForUserSenderId) {
    this.messagesForUserSenderId = messagesForUserSenderId;
  }

  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "user_group", catalog = "mindmessages", joinColumns = { @JoinColumn(name = "user_id",
      nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "group_id", nullable = false,
      updatable = false) })
  public Set<Group> getGroups() {
    return this.groups;
  }

  public void setGroups(Set<Group> groups) {
    this.groups = groups;
  }

}
